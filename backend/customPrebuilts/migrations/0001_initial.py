# Generated by Django 5.2 on 2025-05-04 16:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("steam_store_id", models.IntegerField()),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="PartsMotherboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("manufacturer", models.CharField(max_length=50)),
                ("msrp", models.FloatField(blank=True, null=True)),
                ("nvme_slot_count", models.PositiveIntegerField(blank=True, null=True)),
                ("ethernet", models.FloatField(blank=True, null=True)),
                ("photo", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Spec",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("spec", models.IntegerField(unique=True)),
                ("description", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="GameSpec",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("spec", models.IntegerField()),
                ("geforce_card_id", models.CharField(blank=True, max_length=50)),
                ("radeon_card_id", models.CharField(blank=True, max_length=50)),
                ("fps", models.IntegerField(blank=True, null=True)),
                ("resolution", models.CharField(blank=True, max_length=50, null=True)),
                ("preset", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="customPrebuilts.game",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PartsCPU",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("manufacturer", models.CharField(max_length=50)),
                ("series", models.CharField(blank=True, max_length=50)),
                ("msrp", models.FloatField(blank=True, null=True)),
                ("core_count", models.PositiveIntegerField()),
                ("core_speed", models.FloatField(blank=True, null=True)),
                ("boost_speed", models.FloatField(blank=True, null=True)),
                ("socket", models.CharField(max_length=50)),
                ("photo", models.URLField(blank=True, null=True)),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=(
                            "name",
                            "manufacturer",
                            "core_count",
                            "core_speed",
                            "socket",
                            "photo",
                        ),
                        name="unique_cpus",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PartsGPU",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("manufacturer", models.CharField(max_length=50)),
                ("msrp", models.FloatField(blank=True, null=True)),
                ("photo", models.URLField(blank=True, null=True)),
                ("fps_1080p_medium", models.FloatField(blank=True, null=True)),
                ("fps_1080p_ultra", models.FloatField(blank=True, null=True)),
                ("fps_1440p_ultra", models.FloatField(blank=True, null=True)),
                ("fps_4k_ultra", models.FloatField(blank=True, null=True)),
                ("gpu_chip_model", models.CharField(max_length=50)),
                ("cuda_cores", models.PositiveIntegerField()),
                ("boost_clock", models.PositiveIntegerField()),
                ("memory", models.CharField(max_length=50)),
                ("memory_bandwidth", models.PositiveIntegerField()),
                ("power_consumption", models.PositiveIntegerField()),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=("name", "manufacturer", "cuda_cores", "memory"),
                        name="unique_gpus",
                    )
                ],
            },
        ),
    ]
