# Generated by Django 5.2 on 2025-04-13 20:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="PartsMotherboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("manufacturer", models.CharField(max_length=50)),
                ("msrp", models.FloatField(blank=True, null=True)),
                ("nvme_slot_count", models.PositiveIntegerField(blank=True, null=True)),
                ("ethernet", models.FloatField(blank=True, null=True)),
                ("photo", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="PartsCPU",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("manufacturer", models.CharField(max_length=50)),
                ("msrp", models.FloatField(blank=True, null=True)),
                ("core_count", models.PositiveIntegerField()),
                ("core_speed", models.FloatField(blank=True, null=True)),
                ("boost_speed", models.FloatField(blank=True, null=True)),
                ("socket", models.CharField(max_length=50)),
                ("photo", models.URLField(blank=True, null=True)),
            ],
            options={
                "unique_together": {
                    (
                        "name",
                        "manufacturer",
                        "core_count",
                        "core_speed",
                        "socket",
                        "photo",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="PartsGPU",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("manufacturer", models.CharField(max_length=50)),
                ("msrp", models.FloatField(blank=True, null=True)),
                ("photo", models.URLField(blank=True, null=True)),
                ("year", models.IntegerField(blank=True, null=True)),
                (
                    "fps_1080p_medium",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "fps_1080p_ultra",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "fps_1440p_ultra",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "fps_4k_ultra",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("gpu_chip_model", models.CharField(max_length=50)),
                ("cuda_cores", models.PositiveIntegerField()),
                ("boost_clock", models.PositiveIntegerField()),
                ("memory", models.CharField(max_length=50)),
                ("memory_bandwidth", models.PositiveIntegerField()),
                ("power_consumption", models.PositiveIntegerField()),
            ],
            options={
                "unique_together": {
                    ("name", "manufacturer", "year", "cuda_cores", "memory")
                },
            },
        ),
    ]
